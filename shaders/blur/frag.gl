#version 330 core
out vec4 FragColor;

uniform sampler2D source;
uniform bool horizontal;

in vec2 frag_uv;

const float weights[5] = float[] (0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216);

void main()
{
    vec2 tex_offset = 1.0 / textureSize(source, 0);
    vec3 color = texture(source, frag_uv).rgb * weights[0];

    if (horizontal)
    {
        for(int i = 1; i < 5; ++i)
        {
            color += texture(source, frag_uv + vec2(tex_offset.x * i, 0)).rgb * weights[i];
            color += texture(source, frag_uv - vec2(tex_offset.x * i, 0)).rgb * weights[i];
        }
    }
    else
    {
        for(int i = 1; i < 5; ++i)
        {
            color += texture(source, frag_uv + vec2(0, tex_offset.y * i)).rgb * weights[i];
            color += texture(source, frag_uv - vec2(0, tex_offset.y * i)).rgb * weights[i];
        }
    }
        
    FragColor = vec4(color, 1.0);
} 