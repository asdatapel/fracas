#version 330 core
out vec4 FragColor;

in vec2 frag_uv;

uniform float t;
uniform sampler2D num_tex;

// https://easings.net/#easeOutElastic
float easeOutElastic(float t) {
    float c4 = (2 * 3.1415) / 3;

    t = clamp(t, 0, 1);
    return pow(2, -10 * t) * sin((t * 10 - 0.75) * c4) + 1;
}

vec4 ripple(float d, float thickness, vec3 color, float alpha)
{
    float distance_from_center = length((frag_uv - vec2(0.5, 0.25)) * vec2(1, 0.5));
    float distance_from_ripple = distance_from_center - d;
    return smoothstep(thickness, thickness * 3 / 10, abs(distance_from_ripple)) * vec4(color, alpha);
}

void main()
{
    vec4 color = ripple(t, 0.01 + 0.1 * t * t, vec3(.1, .1, .9), 1)
                 + ripple(0.3 * sqrt(1 - pow((t - 0.25) - 1, 2)) ,  0.1 * t, vec3(.1, 0, .9), 1 - (t * 2));

    vec2 scale = vec2(easeOutElastic(t) * 3, easeOutElastic(t) * 2);
    vec2 center = vec2(0.5, 0.25);
    vec2 scaled_uv = (frag_uv - center) * scale + vec2(0.5, 0.5);
    vec4 num = texture(num_tex, scaled_uv);
    FragColor = mix(color, num, num.a);
} 