#version 330 core

uniform float t;
uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

uniform mat4 shadow_caster_mat;

layout (location = 0) in vec3 pos;
layout (location = 1) in vec2 uv;
layout (location = 2) in vec3 normal;

out vec3 frag_world_pos;
out vec2 frag_uv;
out vec3 frag_normal;

out vec4 frag_light_pos;

void main()
{
    frag_uv = uv;
    frag_normal = mat3(transpose(inverse(model))) * normal;
    frag_world_pos = (model * vec4(pos, 1.0)).xyz;
    gl_Position = projection * view * model * vec4(pos, 1.0);
    
    frag_light_pos = shadow_caster_mat * vec4(frag_world_pos, 1.0);
}