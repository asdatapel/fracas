#version 330 core

uniform float t;
uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

layout (location = 0) in vec3 pos;
layout (location = 1) in vec2 main_uv;
layout (location = 2) in vec3 normal;
layout (location = 3) in vec3 tangent;
layout (location = 3) in vec3 bitangent;

out vec3 frag_world_pos;
out vec2 frag_main_uv;
out vec3 frag_normal;
out vec3 frag_tangent;
out vec3 frag_bitangent;

void main()
{
    frag_main_uv = main_uv;
    frag_normal = normalize(vec3(model * vec4(normal, 0)));
    frag_tangent = normalize(vec3(model * vec4(tangent, 0)));
    frag_bitangent = normalize(vec3(model * vec4(bitangent, 0)));
    frag_world_pos = (model * vec4(pos, 1.0)).xyz;
    gl_Position = projection * view * model * vec4(pos, 1.0);
}