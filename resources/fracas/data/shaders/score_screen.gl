$vert_shader
#version 430 core

$include pbr_lit_3d.vert

layout (location = $vertex_input) in vec2 text_uv;
layout (location = $vertex_output) out vec2 frag_text_uv;

void main()
{
  pbr_lit_3d_vert();
  frag_text_uv = text_uv;
}

$frag_shader
#version 430 core

$include reflections.standard
$include pbr_lit_3d.frag

$set material_offset $texture
uniform layout(binding = $texture) sampler2D albedo_texture;
uniform layout(binding = $texture) sampler2D normal_texture;
uniform layout(binding = $texture) sampler2D metal_texture;
uniform layout(binding = $texture) sampler2D roughness_texture;
uniform layout(binding = $texture) sampler2D emit_texture;
uniform layout(binding = $texture) sampler2D ao_texture;
uniform layout(binding = $texture) sampler2D text_texture;

layout (location = $frag_input) in vec2 frag_text_uv;

out vec4 FragColor;

void main()
{
    vec3 albedo = texture(albedo_texture, frag_uv).xyz;
    vec3 normal = texture(normal_texture, frag_uv).xyz;
    float metal = texture(metal_texture, frag_uv).x;
    float roughness = texture(roughness_texture, frag_uv).x;
    vec3 emit = texture(emit_texture, frag_uv).rgb;
    float ao = texture(ao_texture, frag_uv).x;

    vec4 text = vec4(10, 10, 10, texture(text_texture, frag_text_uv).r);
    emit = mix(emit, text.xyz, text.a);
    FragColor = pbr_lit_3d_frag(albedo, frag_normal, metal, roughness, emit, ao, 1);
}